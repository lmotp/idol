{"version":3,"sources":["components/Container.js","routers/Home.js","components/Loading.js","routers/Game.js","routers/Result/Result1.js","routers/Result/Result2.js","routers/Result/Result3.js","routers/Result/Result4.js","App.js","index.js"],"names":["ContainerBox","styled","div","Container","children","Home","startGame","to","onClick","Loading","App","useState","songs","setSongs","count","setCount","lyrics","setLyrics","view","change","setChange","result","setResult","wrongAnswer","setWrongAnser","rightAnswer","setRightgAnser","isLoding","setIsLoding","seconds","setSeconds","shuffleBox","map","v","push","shuffle","shuffle2","title","wow","splice","i","Math","floor","random","length","unshift","noNmae","slice","useEffect","axios","get","then","data","songList","catch","error","console","log","inTitle","e","target","textContent","countdown","setInterval","parseInt","clearInterval","Result","path","exact","component","Game","Result1","Result2","Result3","Result4","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee22d602.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nconst ContainerBox = styled.div`\n  width: 512px;\n  height: 768px;\n\n  position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.04);\n\n  margin: 0 auto; /* 페이지 중앙에 나타나도록 설정 */\n\n  margin-top: 96px;\n  margin-bottom: 32px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Container = ({ children }) => {\n  return <ContainerBox>{children}</ContainerBox>;\n};\n\nexport default Container;\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from '../components/Container';\r\nconst Home = ({ startGame }) => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Link to=\"/game\">\r\n          <button onClick={startGame}>게임을 시작한우~+</button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Container from './Container';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <h1>로딩중</h1>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Loading from '../components/Loading';\r\nimport Container from '../components/Container';\r\nimport axios from 'axios';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const [songs, setSongs] = useState([]);\r\n  const [count, setCount] = useState(0);\r\n  const [lyrics, setLyrics] = useState([]);\r\n  const [view] = useState([]);\r\n  const [change, setChange] = useState('');\r\n  const [result, setResult] = useState([]);\r\n  const [wrongAnswer, setWrongAnser] = useState(0);\r\n  const [rightAnswer, setRightgAnser] = useState(0);\r\n  const [isLoding, setIsLoding] = useState(true);\r\n  const [seconds, setSeconds] = useState(15);\r\n\r\n  // 셔플하기\r\n  const shuffleBox = () => {\r\n    // 타이틀 바꾸기\r\n    setLyrics([]);\r\n    songs.map((v) => lyrics.push(v.lyrics));\r\n    setChange(lyrics[count]);\r\n\r\n    // 보기 섞기\r\n    const shuffle = [];\r\n    const shuffle2 = [];\r\n    songs.map((v) => view.push(v.title));\r\n    const wow = view.splice(count, 1);\r\n    for (let i = 0; i < 9; i++) {\r\n      shuffle.push(view.splice(Math.floor(Math.random() * view.length), 1)[0]);\r\n    }\r\n    shuffle.unshift(wow);\r\n    const noNmae = shuffle.slice(0, 4);\r\n    for (let i = 0; i < 4; i++) {\r\n      shuffle2.push(noNmae.splice(Math.floor(Math.random() * noNmae.length), 1)[0]);\r\n    }\r\n    setResult(shuffle2);\r\n  };\r\n\r\n  // 첫 시작값\r\n  useEffect(() => {\r\n    axios\r\n      .get('../dummy/song_list.json')\r\n      .then(({ data }) => {\r\n        setSongs(data.songList);\r\n        setIsLoding(false);\r\n        shuffleBox();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n\r\n    return shuffleBox;\r\n  }, [isLoding, count]);\r\n\r\n  const inTitle = (e) => {\r\n    // 카운터 늘리기\r\n    setCount(count + 1);\r\n    if (count === 10) {\r\n      return setCount(10);\r\n    }\r\n\r\n    setSeconds(15);\r\n\r\n    shuffleBox();\r\n    // 맞는지 틀린지 판단\r\n    if (e.target.textContent === songs[count].title) {\r\n      setRightgAnser(rightAnswer + 1);\r\n    } else {\r\n      setWrongAnser(wrongAnswer + 1);\r\n    }\r\n  };\r\n\r\n  // 타이머\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      if (parseInt(seconds) > 0) {\r\n        setSeconds(parseInt(seconds) - 1);\r\n      }\r\n      if (parseInt(seconds) === 0) {\r\n        setCount(count + 1);\r\n        setWrongAnser(wrongAnswer + 1);\r\n        setSeconds(15);\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(countdown);\r\n  }, [seconds, count, wrongAnswer]);\r\n\r\n  // 카운터가 10개 넘으면은 결과창으로\r\n  if (count === 10) {\r\n    if (rightAnswer <= 2) {\r\n      return <Redirect to=\"/result1\" />;\r\n    } else if (rightAnswer <= 5) {\r\n      return <Redirect to=\"/result2\" />;\r\n    } else if (rightAnswer <= 8) {\r\n      return <Redirect to=\"/result3\" />;\r\n    } else {\r\n      return <Redirect to=\"/result4\" />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoding ? (\r\n        <div>\r\n          <Loading />\r\n        </div>\r\n      ) : (\r\n        <Container>\r\n          <h2>{seconds < 10 ? `0${seconds}` : seconds}</h2>\r\n          <h1>{change}</h1>\r\n          <div>{count + 1}/10</div>\r\n          <button onClick={inTitle}>{result[0]}</button>\r\n          <button onClick={inTitle}>{result[1]}</button>\r\n          <button onClick={inTitle}>{result[2]}</button>\r\n          <button onClick={inTitle}>{result[3]}</button>\r\n          {rightAnswer}:{wrongAnswer}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport Container from '../../components/Container';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Result = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h1>하수무무</h1>\r\n        <Link to={'/'}>\r\n          <button>다시하기</button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport Container from '../../components/Container';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Result = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h1>중수무무</h1>\r\n        <Link to={'/'}>\r\n          <button>다시하기</button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport Container from '../../components/Container';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Result = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h1>고수무무</h1>\r\n        <Link to={'/'}>\r\n          <button>다시하기</button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from 'react';\r\nimport Container from '../../components/Container';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Result = () => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h1>완전 고수무무</h1>\r\n        <Link to={'/'}>\r\n          <button>다시하기</button>\r\n        </Link>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './routers/Home';\nimport Game from './routers/Game';\nimport Result1 from './routers/Result/Result1';\nimport Result2 from './routers/Result/Result2';\nimport Result3 from './routers/Result/Result3';\nimport Result4 from './routers/Result/Result4';\n\nconst App = () => {\n  return (\n    <HashRouter>\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/game\" component={Game} />\n      <Route path=\"/result1\" component={Result1} />\n      <Route path=\"/result2\" component={Result2} />\n      <Route path=\"/result3\" component={Result3} />\n      <Route path=\"/result4\" component={Result4} />\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}