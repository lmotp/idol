{"version":3,"sources":["components/Container.js","images/main.png","routers/Home.js","components/Loading.js","Users.js","routers/Game.js","images/Hwa.png","routers/Result/Result1.js","images/Whee.png","routers/Result/Result2.js","images/Moon.png","routers/Result/Result3.js","images/Sol.png","routers/Result/Result4.js","App.js","index.js"],"names":["ContainerBox","styled","div","Container","children","Home","startGame","className","src","Main","alt","title","to","onClick","Loading","initializer","songList","id","artist","lyrics","rightCounter","wrongCounter","counter","reduer","state","action","type","Error","UserStateContext","createContext","UsersDispatchContext","UsersShuffleTitle","UserChangeLyrics","Users","useReducer","dispatch","console","log","Provider","value","view","shuffle","shuffle2","map","v","push","wow","splice","i","Math","floor","random","length","unshift","noNmae","slice","shuffleBox","changeLyrics","useUsersState","useContext","useUsersDispatch","Game","context","shuffleTitle","useState","isLoding","setIsLoding","seconds","setSeconds","animation","setAnimation","disabled","setDisabled","useEffect","titleMoveConfirm","useCallback","setTimeout","onClickChangeTitle","e","target","textContent","countdown","setInterval","parseInt","clearInterval","Result","users","Hwa","Whee","Moon","Sol","App","path","exact","component","Result1","Result2","Result3","Result4","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a7b69b2.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nconst ContainerBox = styled.div`\n  width: 650px;\n  height: 768px;\n\n  position: relative; /* 추후 박스 하단에 추가 버튼을 위치시키기 위한 설정 */\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 0 8px 0 rgba(0, 0, 0, 0.5);\n\n  margin: 0 auto; /* 페이지 중앙에 나타나도록 설정 */\n\n  margin-top: 96px;\n  margin-bottom: 32px;\n  padding: 20px;\n  overflow: hidden;\n`;\n\nconst Container = ({ children }) => {\n  return <ContainerBox>{children}</ContainerBox>;\n};\n\nexport default Container;\n","export default __webpack_public_path__ + \"static/media/main.7754b2e6.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from '../components/Container';\r\nimport Main from '../images/main.png';\r\nimport '../Css/Main.css';\r\nconst Home = ({ startGame }) => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"main\">\r\n          <div className=\"mainTitle\">\r\n            <h1>무무를 위한</h1>\r\n            <h2>가사 맞추기 게임</h2>\r\n          </div>\r\n          <img className=\"mainImg\" src={Main} alt=\"메인사진\" title=\"메인사진\"></img>\r\n          <Link to=\"/game\">\r\n            <button className=\"startButton\" onClick={startGame}>\r\n              게임을 시작한우~+\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Container from './Container';\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <Container>\r\n      <div>\r\n        <h1>로딩중</h1>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { createContext, useContext, useReducer, useState } from 'react';\r\nconst initializer = {\r\n  songList: [\r\n    {\r\n      id: 1,\r\n      title: 'Where Are We Now',\r\n      artist: '문별',\r\n      lyrics: '어디론가 날 데려가 줄래 아님 저 바람 부는 대로',\r\n    },\r\n    {\r\n      id: 2,\r\n      title: 'HIP',\r\n      artist: '문별',\r\n      lyrics: '날 자극한 여러분 감사 거기서 멈춘 찌질이 반사',\r\n    },\r\n    {\r\n      id: 3,\r\n      title: '데칼코마니',\r\n      artist: '휘인',\r\n      lyrics: '여잔 촉이 정말 빠르지 이미 물은 엎질러졌어 우린 몰래 새벽을 맞네',\r\n    },\r\n    {\r\n      id: 4,\r\n      title: '별이 빛나는 밤',\r\n      artist: '휘인',\r\n      lyrics: '겨울이 지나고 또다시 꽃은 피고 따뜻한 공기 냄새가 날 감싸',\r\n    },\r\n    {\r\n      id: 5,\r\n      title: '딩가딩가',\r\n      artist: '솔라',\r\n      lyrics: '왜 다들 화나 있어 요즘 너무 삭막해 그저 달콤한 휴식이 필요해',\r\n    },\r\n    {\r\n      id: 6,\r\n      title: '음오아예',\r\n      artist: '화사',\r\n      lyrics: '시간 좀 되나요 나 좀 도와줘요 그 쪽 때문에 오감이 제멋대로예요',\r\n    },\r\n    {\r\n      id: 7,\r\n      title: '넌 is 뭔들',\r\n      artist: '솔라',\r\n      lyrics: '센스매너 말투표정 행동 하나까지 섬세한 널 알아보는 나',\r\n    },\r\n    {\r\n      id: 8,\r\n      title: '나로 말할 것 같으면',\r\n      artist: '화사',\r\n      lyrics: '겨울에 민소매 입으면 여름이 되는 거야 I love Ya Introduce My Self',\r\n    },\r\n    {\r\n      id: 9,\r\n      title: '너나 해',\r\n      artist: '휘인, 솔라',\r\n      lyrics: '밤을 새워 버렸어 차갑게 식은 머리도 너의 태도가 이해 안 돼',\r\n    },\r\n    {\r\n      id: 10,\r\n      title: 'AYA',\r\n      artist: '문별',\r\n      lyrics: '님 얼굴에 침을 뱉어 오점 하나 생겨 우린 남이 됐다',\r\n    },\r\n  ],\r\n  rightCounter: 0,\r\n  wrongCounter: 0,\r\n  counter: 0,\r\n};\r\n\r\nconst reduer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'RIGHT':\r\n      return { ...state, counter: state.counter + 1, rightCounter: state.rightCounter + 1 };\r\n    case 'WRONG':\r\n      return { ...state, wrongCounter: state.wrongCounter + 1, counter: state.counter + 1 };\r\n    case 'RESET':\r\n      return { ...state, wrongCounter: 0, rightCounter: 0, counter: 0 };\r\n    default:\r\n      throw new Error(`Unhanled action type ${action.type}`);\r\n  }\r\n};\r\n\r\nconst UserStateContext = createContext();\r\nconst UsersDispatchContext = createContext();\r\nconst UsersShuffleTitle = createContext();\r\nconst UserChangeLyrics = createContext();\r\n\r\nexport const Users = ({ children }) => {\r\n  const [state, dispatch] = useReducer(reduer, initializer);\r\n\r\n  //문제 바꾸기\r\n  const changeLyrics = () => {\r\n    const lyrics = [];\r\n    state.songList.map((v) => lyrics.push(v.lyrics));\r\n    return lyrics;\r\n  };\r\n\r\n  // 보기창 바꾸기\r\n  const shuffleBox = () => {\r\n    const view = [];\r\n    const shuffle = [];\r\n    const shuffle2 = [];\r\n    state.songList.map((v) => view.push(v.title));\r\n    const wow = view.splice(state.counter, 1);\r\n    for (let i = 0; i < 9; i++) {\r\n      shuffle.push(view.splice(Math.floor(Math.random() * view.length), 1)[0]);\r\n    }\r\n    shuffle.unshift(wow);\r\n    const noNmae = shuffle.slice(0, 4);\r\n    for (let i = 0; i < 4; i++) {\r\n      shuffle2.push(noNmae.splice(Math.floor(Math.random() * noNmae.length), 1)[0]);\r\n    }\r\n    return shuffle2;\r\n  };\r\n\r\n  return (\r\n    console.log(state),\r\n    (\r\n      <UserStateContext.Provider value={state}>\r\n        <UsersDispatchContext.Provider value={dispatch}>\r\n          <UsersShuffleTitle.Provider value={shuffleBox()}>\r\n            <UserChangeLyrics.Provider value={changeLyrics()}>{children}</UserChangeLyrics.Provider>\r\n          </UsersShuffleTitle.Provider>\r\n        </UsersDispatchContext.Provider>\r\n      </UserStateContext.Provider>\r\n    )\r\n  );\r\n};\r\n\r\nexport function useUsersState() {\r\n  const context = useContext(UserStateContext);\r\n  return context;\r\n}\r\n\r\nexport function useUsersDispatch() {\r\n  const context = useContext(UsersDispatchContext);\r\n  return context;\r\n}\r\n\r\nexport function useUsersTitle() {\r\n  const context = useContext(UsersShuffleTitle);\r\n  return context;\r\n}\r\n\r\nexport function useUsresLyrics() {\r\n  const context = useContext(UserChangeLyrics);\r\n  return context;\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport Loading from '../components/Loading';\r\nimport Container from '../components/Container';\r\nimport { Redirect } from 'react-router-dom';\r\nimport '../Css/Game.css';\r\nimport { useUsersState, useUsersDispatch, useUsersTitle, useUsresLyrics } from '../Users';\r\n\r\nfunction Game() {\r\n  const context = useUsersState();\r\n  const dispatch = useUsersDispatch();\r\n  const shuffleTitle = useUsersTitle();\r\n  const lyrics = useUsresLyrics();\r\n\r\n  const [isLoding, setIsLoding] = useState(true);\r\n  const [seconds, setSeconds] = useState(30);\r\n  const [animation, setAnimation] = useState(true);\r\n  const [disabled, setDisabled] = useState(false);\r\n\r\n  // 로딩화면\r\n  useEffect(() => {\r\n    setIsLoding(false);\r\n  }, [isLoding]);\r\n\r\n  //시간초 다시 리셋하면서 애니메이션까지\r\n  const titleMoveConfirm = useCallback(() => {\r\n    setDisabled(true);\r\n    setSeconds(30);\r\n    setAnimation(false);\r\n    setTimeout(() => {\r\n      setAnimation(true);\r\n      setDisabled(false);\r\n    }, 700);\r\n  }, [disabled, seconds, animation]);\r\n\r\n  // 보기 클릭했을때\r\n  const onClickChangeTitle = (e) => {\r\n    titleMoveConfirm();\r\n\r\n    // 맞는지 틀린지 판단\r\n    if (e.target.textContent === context.songList[context.counter].title) {\r\n      dispatch({ type: 'RIGHT' });\r\n    } else {\r\n      dispatch({ type: 'WRONG' });\r\n    }\r\n  };\r\n\r\n  // 타이머\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      if (parseInt(seconds) > 0) {\r\n        setSeconds(parseInt(seconds) - 1);\r\n      }\r\n      if (parseInt(seconds) === 0) {\r\n        dispatch({ type: 'WRONG' });\r\n        titleMoveConfirm();\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(countdown);\r\n  }, [seconds, titleMoveConfirm, dispatch]);\r\n\r\n  // 카운터가 10개 넘으면은 결과창으로\r\n  if (context.counter === 10) {\r\n    if (context.rightCounter <= 2) {\r\n      return <Redirect to=\"/result1\" />;\r\n    } else if (context.rightCounter <= 5) {\r\n      return <Redirect to=\"/result2\" />;\r\n    } else if (context.rightCounter <= 8) {\r\n      return <Redirect to=\"/result3\" />;\r\n    } else {\r\n      return <Redirect to=\"/result4\" />;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoding ? (\r\n        <div>\r\n          <Loading />\r\n        </div>\r\n      ) : (\r\n        <Container>\r\n          <h2 className=\"topBar\">\r\n            {seconds < 10 ? `0${seconds}` : seconds}\r\n            <span>Q{context.counter + 1}/10</span>\r\n          </h2>\r\n          <h1 className=\"question\">{lyrics[context.counter]}</h1>\r\n          <div className=\"buttonBox\">\r\n            <button\r\n              disabled={disabled}\r\n              className={animation ? 'buttonRightMove' : 'buttonLeftMove'}\r\n              onClick={onClickChangeTitle}\r\n            >\r\n              {shuffleTitle[0]}\r\n            </button>\r\n            <button\r\n              disabled={disabled}\r\n              className={animation ? 'buttonRightMove' : 'buttonLeftMove'}\r\n              onClick={onClickChangeTitle}\r\n            >\r\n              {shuffleTitle[1]}\r\n            </button>\r\n            <button\r\n              disabled={disabled}\r\n              className={animation ? 'buttonRightMove' : 'buttonLeftMove'}\r\n              onClick={onClickChangeTitle}\r\n            >\r\n              {shuffleTitle[2]}\r\n            </button>\r\n            <button\r\n              disabled={disabled}\r\n              className={animation ? 'buttonRightMove' : 'buttonLeftMove'}\r\n              onClick={onClickChangeTitle}\r\n            >\r\n              {shuffleTitle[3]}\r\n            </button>\r\n          </div>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Game;\r\n","export default __webpack_public_path__ + \"static/media/Hwa.2ca4f379.png\";","import React from 'react';\r\nimport Container from '../../components/Container';\r\nimport { Link } from 'react-router-dom';\r\nimport Hwa from '../../images/Hwa.png';\r\nimport '../../Css/Result.css';\r\nimport { useUsersState, useUsersDispatch } from '../../Users';\r\n\r\nconst Result = () => {\r\n  const users = useUsersState();\r\n  const dispatch = useUsersDispatch();\r\n  const gameReset = () => {\r\n    dispatch({ type: 'RESET' });\r\n  };\r\n  const { rightCounter, wrongCounter } = users;\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"result\">\r\n          <h1 className=\"resultTop\">하수무무</h1>\r\n          <img className=\"resultImg\" src={Hwa} alt=\"화사이미지\" title=\"화사\" />\r\n          <Link to={'/'}>\r\n            <button onClick={gameReset} className=\"resultBtn\">\r\n              다시하기\r\n            </button>\r\n          </Link>\r\n          <h1>\r\n            {rightCounter},{wrongCounter}\r\n          </h1>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","export default __webpack_public_path__ + \"static/media/Whee.7feb0909.png\";","import React from 'react';\r\nimport Container from '../../components/Container';\r\nimport { Link } from 'react-router-dom';\r\nimport Whee from '../../images/Whee.png';\r\nimport '../../Css/Result.css';\r\nimport { useUsersDispatch, useUsersState } from '../../Users';\r\n\r\nconst Result = () => {\r\n  const users = useUsersState();\r\n  const { rightCounter, wrongCounter } = users;\r\n  const dispatch = useUsersDispatch();\r\n  const gameReset = () => {\r\n    dispatch({ type: 'RESET' });\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"result\">\r\n          <h1>중수무무</h1>\r\n          <img className=\"resultImg\" src={Whee} alt=\"휘인이미지\" title=\"휘인\" />\r\n          <Link to={'/'}>\r\n            <button onClick={gameReset} className=\"resultBtn\">\r\n              다시하기\r\n            </button>\r\n          </Link>\r\n          <h1>\r\n            {rightCounter},{wrongCounter}\r\n          </h1>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","export default __webpack_public_path__ + \"static/media/Moon.8d747d99.png\";","import React from 'react';\r\nimport Container from '../../components/Container';\r\nimport { Link } from 'react-router-dom';\r\nimport Moon from '../../images/Moon.png';\r\nimport '../../Css/Result.css';\r\nimport { useUsersDispatch, useUsersState } from '../../Users';\r\n\r\nconst Result = () => {\r\n  const users = useUsersState();\r\n  const { rightCounter, wrongCounter } = users;\r\n  const dispatch = useUsersDispatch();\r\n  const gameReset = () => {\r\n    dispatch({ type: 'RESET' });\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"result\">\r\n          <h1>고수무무</h1>\r\n          <img className=\"resultImg\" src={Moon} alt=\"문별이미지\" title=\"문별\" />\r\n          <Link to={'/'}>\r\n            <button onClick={gameReset} className=\"resultBtn\">\r\n              다시하기\r\n            </button>\r\n          </Link>\r\n          <h1>\r\n            {rightCounter},{wrongCounter}\r\n          </h1>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","export default __webpack_public_path__ + \"static/media/Sol.adf4f18a.png\";","import React from 'react';\r\nimport Container from '../../components/Container';\r\nimport { Link } from 'react-router-dom';\r\nimport Sol from '../../images/Sol.png';\r\nimport '../../Css/Result.css';\r\nimport { useUsersDispatch, useUsersState } from '../../Users';\r\n\r\nconst Result = () => {\r\n  const users = useUsersState();\r\n  const { rightCounter, wrongCounter } = users;\r\n  const dispatch = useUsersDispatch();\r\n  const gameReset = () => {\r\n    dispatch({ type: 'RESET' });\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <div className=\"result\">\r\n          <h1>완전 고수무무</h1>\r\n          <img className=\"resultImg\" src={Sol} alt=\"솔라이미지\" title=\"솔라\" />\r\n          <Link to={'/'}>\r\n            <button onClick={gameReset} className=\"resultBtn\">\r\n              다시하기\r\n            </button>\r\n          </Link>\r\n          <h1>\r\n            {rightCounter},{wrongCounter}\r\n          </h1>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Result;\r\n","import React from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport Home from './routers/Home';\nimport Game from './routers/Game';\nimport Result1 from './routers/Result/Result1';\nimport Result2 from './routers/Result/Result2';\nimport Result3 from './routers/Result/Result3';\nimport Result4 from './routers/Result/Result4';\nimport { Users } from './Users';\n\nconst App = () => {\n  return (\n    <>\n      <Users>\n        <HashRouter>\n          <Route path=\"/\" exact={true} component={Home} />\n          <Route path=\"/game\" component={Game} />\n          <Route path=\"/result1\" component={Result1} />\n          <Route path=\"/result2\" component={Result2} />\n          <Route path=\"/result3\" component={Result3} />\n          <Route path=\"/result4\" component={Result4} />\n        </HashRouter>\n      </Users>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}